(function(){"use strict";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ki="161",be="",lt="srgb",Ye="srgb-linear",ls="display-p3",Ei="display-p3-linear",je="linear",vi="srgb",Di="rec709",Ri="p3";class Me{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const n=s.indexOf(e);n!==-1&&s.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let n=0,r=s.length;n<r;n++)s[n].call(this,t);t.target=null}}}const Q=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function Qt(){const m=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Q[m&255]+Q[m>>8&255]+Q[m>>16&255]+Q[m>>24&255]+"-"+Q[t&255]+Q[t>>8&255]+"-"+Q[t>>16&15|64]+Q[t>>24&255]+"-"+Q[e&63|128]+Q[e>>8&255]+"-"+Q[e>>16&255]+Q[e>>24&255]+Q[i&255]+Q[i>>8&255]+Q[i>>16&255]+Q[i>>24&255]).toLowerCase()}function et(m,t,e){return Math.max(t,Math.min(e,m))}function cs(m,t){return(m%t+t)%t}function Ze(m,t,e){return(1-e)*m+e*t}function Kt(m,t){switch(t.constructor){case Float32Array:return m;case Uint32Array:return m/4294967295;case Uint16Array:return m/65535;case Uint8Array:return m/255;case Int32Array:return Math.max(m/2147483647,-1);case Int16Array:return Math.max(m/32767,-1);case Int8Array:return Math.max(m/127,-1);default:throw new Error("Invalid component type.")}}function it(m,t){switch(t.constructor){case Float32Array:return m;case Uint32Array:return Math.round(m*4294967295);case Uint16Array:return Math.round(m*65535);case Uint8Array:return Math.round(m*255);case Int32Array:return Math.round(m*2147483647);case Int16Array:return Math.round(m*32767);case Int8Array:return Math.round(m*127);default:throw new Error("Invalid component type.")}}class j{constructor(t=0,e=0){j.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(et(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),n=this.x-t.x,r=this.y-t.y;return this.x=n*i-r*s+t.x,this.y=n*s+r*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Bt{constructor(t,e,i,s,n,r,o,a,h){Bt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,o,a,h)}set(t,e,i,s,n,r,o,a,h){const l=this.elements;return l[0]=t,l[1]=s,l[2]=o,l[3]=e,l[4]=n,l[5]=a,l[6]=i,l[7]=r,l[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],o=i[3],a=i[6],h=i[1],l=i[4],c=i[7],u=i[2],d=i[5],p=i[8],x=s[0],y=s[3],g=s[6],M=s[1],w=s[4],b=s[7],S=s[2],F=s[5],_=s[8];return n[0]=r*x+o*M+a*S,n[3]=r*y+o*w+a*F,n[6]=r*g+o*b+a*_,n[1]=h*x+l*M+c*S,n[4]=h*y+l*w+c*F,n[7]=h*g+l*b+c*_,n[2]=u*x+d*M+p*S,n[5]=u*y+d*w+p*F,n[8]=u*g+d*b+p*_,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],l=t[8];return e*r*l-e*o*h-i*n*l+i*o*a+s*n*h-s*r*a}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],l=t[8],c=l*r-o*h,u=o*a-l*n,d=h*n-r*a,p=e*c+i*u+s*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/p;return t[0]=c*x,t[1]=(s*h-l*i)*x,t[2]=(o*i-s*r)*x,t[3]=u*x,t[4]=(l*e-s*a)*x,t[5]=(s*n-o*e)*x,t[6]=d*x,t[7]=(i*a-h*e)*x,t[8]=(r*e-i*n)*x,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,n,r,o){const a=Math.cos(n),h=Math.sin(n);return this.set(i*a,i*h,-i*(a*r+h*o)+r+t,-s*h,s*a,-s*(-h*r+a*o)+o+e,0,0,1),this}scale(t,e){return this.premultiply($e.makeScale(t,e)),this}rotate(t){return this.premultiply($e.makeRotation(-t)),this}translate(t,e){return this.premultiply($e.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const $e=new Bt;function us(m){for(let t=m.length-1;t>=0;--t)if(m[t]>=65535)return!0;return!1}function Ii(m){return document.createElementNS("http://www.w3.org/1999/xhtml",m)}const Pi={};function we(m){m in Pi||(Pi[m]=!0,console.warn(m))}const Ni=new Bt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Oi=new Bt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Ae={[Ye]:{transfer:je,primaries:Di,toReference:m=>m,fromReference:m=>m},[lt]:{transfer:vi,primaries:Di,toReference:m=>m.convertSRGBToLinear(),fromReference:m=>m.convertLinearToSRGB()},[Ei]:{transfer:je,primaries:Ri,toReference:m=>m.applyMatrix3(Oi),fromReference:m=>m.applyMatrix3(Ni)},[ls]:{transfer:vi,primaries:Ri,toReference:m=>m.convertSRGBToLinear().applyMatrix3(Oi),fromReference:m=>m.applyMatrix3(Ni).convertLinearToSRGB()}},ds=new Set([Ye,Ei]),ct={enabled:!0,_workingColorSpace:Ye,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(m){if(!ds.has(m))throw new Error(`Unsupported working color space, "${m}".`);this._workingColorSpace=m},convert:function(m,t,e){if(this.enabled===!1||t===e||!t||!e)return m;const i=Ae[t].toReference,s=Ae[e].fromReference;return s(i(m))},fromWorkingColorSpace:function(m,t){return this.convert(m,this._workingColorSpace,t)},toWorkingColorSpace:function(m,t){return this.convert(m,t,this._workingColorSpace)},getPrimaries:function(m){return Ae[m].primaries},getTransfer:function(m){return m===be?je:Ae[m].transfer}};function qt(m){return m<.04045?m*.0773993808:Math.pow(m*.9478672986+.0521327014,2.4)}function Je(m){return m<.0031308?m*12.92:1.055*Math.pow(m,.41666)-.055}let Lt;class ps{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Lt===void 0&&(Lt=Ii("canvas")),Lt.width=t.width,Lt.height=t.height;const i=Lt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Lt}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Ii("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),n=s.data;for(let r=0;r<n.length;r++)n[r]=qt(n[r]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(qt(e[i]/255)*255):e[i]=qt(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let ms=0;class fs{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:ms++}),this.uuid=Qt(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let r=0,o=s.length;r<o;r++)s[r].isDataTexture?n.push(Qe(s[r].image)):n.push(Qe(s[r]))}else n=Qe(s);i.url=n}return e||(t.images[this.uuid]=i),i}}function Qe(m){return typeof HTMLImageElement<"u"&&m instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&m instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&m instanceof ImageBitmap?ps.getDataURL(m):m.data?{data:Array.from(m.data),width:m.width,height:m.height,type:m.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ys=0;class Tt extends Me{constructor(t=Tt.DEFAULT_IMAGE,e=Tt.DEFAULT_MAPPING,i=1001,s=1001,n=1006,r=1008,o=1023,a=1009,h=Tt.DEFAULT_ANISOTROPY,l=be){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ys++}),this.uuid=Qt(),this.name="",this.source=new fs(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=n,this.minFilter=r,this.anisotropy=h,this.format=o,this.internalFormat=null,this.type=a,this.offset=new j(0,0),this.repeat=new j(1,1),this.center=new j(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Bt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof l=="string"?this.colorSpace=l:(we("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=l===3001?lt:be),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==300)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return we("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===lt?3001:3e3}set encoding(t){we("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=t===3001?lt:be}}Tt.DEFAULT_IMAGE=null,Tt.DEFAULT_MAPPING=300,Tt.DEFAULT_ANISOTROPY=1;class te{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,n,r,o){let a=i[s+0],h=i[s+1],l=i[s+2],c=i[s+3];const u=n[r+0],d=n[r+1],p=n[r+2],x=n[r+3];if(o===0){t[e+0]=a,t[e+1]=h,t[e+2]=l,t[e+3]=c;return}if(o===1){t[e+0]=u,t[e+1]=d,t[e+2]=p,t[e+3]=x;return}if(c!==x||a!==u||h!==d||l!==p){let y=1-o;const g=a*u+h*d+l*p+c*x,M=g>=0?1:-1,w=1-g*g;if(w>Number.EPSILON){const S=Math.sqrt(w),F=Math.atan2(S,g*M);y=Math.sin(y*F)/S,o=Math.sin(o*F)/S}const b=o*M;if(a=a*y+u*b,h=h*y+d*b,l=l*y+p*b,c=c*y+x*b,y===1-o){const S=1/Math.sqrt(a*a+h*h+l*l+c*c);a*=S,h*=S,l*=S,c*=S}}t[e]=a,t[e+1]=h,t[e+2]=l,t[e+3]=c}static multiplyQuaternionsFlat(t,e,i,s,n,r){const o=i[s],a=i[s+1],h=i[s+2],l=i[s+3],c=n[r],u=n[r+1],d=n[r+2],p=n[r+3];return t[e]=o*p+l*c+a*d-h*u,t[e+1]=a*p+l*u+h*c-o*d,t[e+2]=h*p+l*d+o*u-a*c,t[e+3]=l*p-o*c-a*u-h*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,s=t._y,n=t._z,r=t._order,o=Math.cos,a=Math.sin,h=o(i/2),l=o(s/2),c=o(n/2),u=a(i/2),d=a(s/2),p=a(n/2);switch(r){case"XYZ":this._x=u*l*c+h*d*p,this._y=h*d*c-u*l*p,this._z=h*l*p+u*d*c,this._w=h*l*c-u*d*p;break;case"YXZ":this._x=u*l*c+h*d*p,this._y=h*d*c-u*l*p,this._z=h*l*p-u*d*c,this._w=h*l*c+u*d*p;break;case"ZXY":this._x=u*l*c-h*d*p,this._y=h*d*c+u*l*p,this._z=h*l*p+u*d*c,this._w=h*l*c-u*d*p;break;case"ZYX":this._x=u*l*c-h*d*p,this._y=h*d*c+u*l*p,this._z=h*l*p-u*d*c,this._w=h*l*c+u*d*p;break;case"YZX":this._x=u*l*c+h*d*p,this._y=h*d*c+u*l*p,this._z=h*l*p-u*d*c,this._w=h*l*c-u*d*p;break;case"XZY":this._x=u*l*c-h*d*p,this._y=h*d*c-u*l*p,this._z=h*l*p+u*d*c,this._w=h*l*c+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],n=e[8],r=e[1],o=e[5],a=e[9],h=e[2],l=e[6],c=e[10],u=i+o+c;if(u>0){const d=.5/Math.sqrt(u+1);this._w=.25/d,this._x=(l-a)*d,this._y=(n-h)*d,this._z=(r-s)*d}else if(i>o&&i>c){const d=2*Math.sqrt(1+i-o-c);this._w=(l-a)/d,this._x=.25*d,this._y=(s+r)/d,this._z=(n+h)/d}else if(o>c){const d=2*Math.sqrt(1+o-i-c);this._w=(n-h)/d,this._x=(s+r)/d,this._y=.25*d,this._z=(a+l)/d}else{const d=2*Math.sqrt(1+c-i-o);this._w=(r-s)/d,this._x=(n+h)/d,this._y=(a+l)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(et(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,n=t._z,r=t._w,o=e._x,a=e._y,h=e._z,l=e._w;return this._x=i*l+r*o+s*h-n*a,this._y=s*l+r*a+n*o-i*h,this._z=n*l+r*h+i*a-s*o,this._w=r*l-i*o-s*a-n*h,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,n=this._z,r=this._w;let o=r*t._w+i*t._x+s*t._y+n*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=r,this._x=i,this._y=s,this._z=n,this;const a=1-o*o;if(a<=Number.EPSILON){const d=1-e;return this._w=d*r+e*this._w,this._x=d*i+e*this._x,this._y=d*s+e*this._y,this._z=d*n+e*this._z,this.normalize(),this}const h=Math.sqrt(a),l=Math.atan2(h,o),c=Math.sin((1-e)*l)/h,u=Math.sin(e*l)/h;return this._w=r*c+this._w*u,this._x=i*c+this._x*u,this._y=s*c+this._y*u,this._z=n*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=Math.random(),e=Math.sqrt(1-t),i=Math.sqrt(t),s=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(e*Math.cos(s),i*Math.sin(n),i*Math.cos(n),e*Math.sin(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class f{constructor(t=0,e=0,i=0){f.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(qi.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(qi.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*s,this.y=n[1]*e+n[4]*i+n[7]*s,this.z=n[2]*e+n[5]*i+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=t.elements,r=1/(n[3]*e+n[7]*i+n[11]*s+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*s+n[12])*r,this.y=(n[1]*e+n[5]*i+n[9]*s+n[13])*r,this.z=(n[2]*e+n[6]*i+n[10]*s+n[14])*r,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,n=t.x,r=t.y,o=t.z,a=t.w,h=2*(r*s-o*i),l=2*(o*e-n*s),c=2*(n*i-r*e);return this.x=e+a*h+r*c-o*l,this.y=i+a*l+o*h-n*c,this.z=s+a*c+n*l-r*h,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s,this.y=n[1]*e+n[5]*i+n[9]*s,this.z=n[2]*e+n[6]*i+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,n=t.z,r=e.x,o=e.y,a=e.z;return this.x=s*a-n*o,this.y=n*r-i*a,this.z=i*o-s*r,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Ke.copy(this).projectOnVector(t),this.sub(Ke)}reflect(t){return this.sub(Ke.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(et(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(e),this.y=i*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ke=new f,qi=new te;class ft{constructor(t=new f(1/0,1/0,1/0),e=new f(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(ut.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(ut.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=ut.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const n=i.getAttribute("position");if(e===!0&&n!==void 0&&t.isInstancedMesh!==!0)for(let r=0,o=n.count;r<o;r++)t.isMesh===!0?t.getVertexPosition(r,ut):ut.fromBufferAttribute(n,r),ut.applyMatrix4(t.matrixWorld),this.expandByPoint(ut);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),_e.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),_e.copy(i.boundingBox)),_e.applyMatrix4(t.matrixWorld),this.union(_e)}const s=t.children;for(let n=0,r=s.length;n<r;n++)this.expandByObject(s[n],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,ut),ut.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ee),ze.subVectors(this.max,ee),Wt.subVectors(t.a,ee),Vt.subVectors(t.b,ee),Ut.subVectors(t.c,ee),Ct.subVectors(Vt,Wt),kt.subVectors(Ut,Vt),Pt.subVectors(Wt,Ut);let e=[0,-Ct.z,Ct.y,0,-kt.z,kt.y,0,-Pt.z,Pt.y,Ct.z,0,-Ct.x,kt.z,0,-kt.x,Pt.z,0,-Pt.x,-Ct.y,Ct.x,0,-kt.y,kt.x,0,-Pt.y,Pt.x,0];return!ti(e,Wt,Vt,Ut,ze)||(e=[1,0,0,0,1,0,0,0,1],!ti(e,Wt,Vt,Ut,ze))?!1:(Se.crossVectors(Ct,kt),e=[Se.x,Se.y,Se.z],ti(e,Wt,Vt,Ut,ze))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ut).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(ut).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(wt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),wt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),wt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),wt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),wt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),wt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),wt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),wt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(wt),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const wt=[new f,new f,new f,new f,new f,new f,new f,new f],ut=new f,_e=new ft,Wt=new f,Vt=new f,Ut=new f,Ct=new f,kt=new f,Pt=new f,ee=new f,ze=new f,Se=new f,Nt=new f;function ti(m,t,e,i,s){for(let n=0,r=m.length-3;n<=r;n+=3){Nt.fromArray(m,n);const o=s.x*Math.abs(Nt.x)+s.y*Math.abs(Nt.y)+s.z*Math.abs(Nt.z),a=t.dot(Nt),h=e.dot(Nt),l=i.dot(Nt);if(Math.max(-Math.max(a,h,l),Math.min(a,h,l))>o)return!1}return!0}const xs=new ft,ie=new f,ei=new f;class ii{constructor(t=new f,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):xs.setFromPoints(t).getCenter(i);let s=0;for(let n=0,r=t.length;n<r;n++)s=Math.max(s,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ie.subVectors(t,this.center);const e=ie.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.addScaledVector(ie,s/i),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(ei.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ie.copy(t.center).add(ei)),this.expandByPoint(ie.copy(t.center).sub(ei))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const At=new f,si=new f,Fe=new f,Et=new f,ni=new f,Be=new f,ri=new f;class Li{constructor(t=new f,e=new f(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,At)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=At.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(At.copy(this.origin).addScaledVector(this.direction,e),At.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){si.copy(t).add(e).multiplyScalar(.5),Fe.copy(e).sub(t).normalize(),Et.copy(this.origin).sub(si);const n=t.distanceTo(e)*.5,r=-this.direction.dot(Fe),o=Et.dot(this.direction),a=-Et.dot(Fe),h=Et.lengthSq(),l=Math.abs(1-r*r);let c,u,d,p;if(l>0)if(c=r*a-o,u=r*o-a,p=n*l,c>=0)if(u>=-p)if(u<=p){const x=1/l;c*=x,u*=x,d=c*(c+r*u+2*o)+u*(r*c+u+2*a)+h}else u=n,c=Math.max(0,-(r*u+o)),d=-c*c+u*(u+2*a)+h;else u=-n,c=Math.max(0,-(r*u+o)),d=-c*c+u*(u+2*a)+h;else u<=-p?(c=Math.max(0,-(-r*n+o)),u=c>0?-n:Math.min(Math.max(-n,-a),n),d=-c*c+u*(u+2*a)+h):u<=p?(c=0,u=Math.min(Math.max(-n,-a),n),d=u*(u+2*a)+h):(c=Math.max(0,-(r*n+o)),u=c>0?n:Math.min(Math.max(-n,-a),n),d=-c*c+u*(u+2*a)+h);else u=r>0?-n:n,c=Math.max(0,-(r*u+o)),d=-c*c+u*(u+2*a)+h;return i&&i.copy(this.origin).addScaledVector(this.direction,c),s&&s.copy(si).addScaledVector(Fe,u),d}intersectSphere(t,e){At.subVectors(t.center,this.origin);const i=At.dot(this.direction),s=At.dot(At)-i*i,n=t.radius*t.radius;if(s>n)return null;const r=Math.sqrt(n-s),o=i-r,a=i+r;return a<0?null:o<0?this.at(a,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,n,r,o,a;const h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return h>=0?(i=(t.min.x-u.x)*h,s=(t.max.x-u.x)*h):(i=(t.max.x-u.x)*h,s=(t.min.x-u.x)*h),l>=0?(n=(t.min.y-u.y)*l,r=(t.max.y-u.y)*l):(n=(t.max.y-u.y)*l,r=(t.min.y-u.y)*l),i>r||n>s||((n>i||isNaN(i))&&(i=n),(r<s||isNaN(s))&&(s=r),c>=0?(o=(t.min.z-u.z)*c,a=(t.max.z-u.z)*c):(o=(t.max.z-u.z)*c,a=(t.min.z-u.z)*c),i>a||o>s)||((o>i||i!==i)&&(i=o),(a<s||s!==s)&&(s=a),s<0)?null:this.at(i>=0?i:s,e)}intersectsBox(t){return this.intersectBox(t,At)!==null}intersectTriangle(t,e,i,s,n){ni.subVectors(e,t),Be.subVectors(i,t),ri.crossVectors(ni,Be);let r=this.direction.dot(ri),o;if(r>0){if(s)return null;o=1}else if(r<0)o=-1,r=-r;else return null;Et.subVectors(this.origin,t);const a=o*this.direction.dot(Be.crossVectors(Et,Be));if(a<0)return null;const h=o*this.direction.dot(ni.cross(Et));if(h<0||a+h>r)return null;const l=-o*Et.dot(ri);return l<0?null:this.at(l/r,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ot{constructor(t,e,i,s,n,r,o,a,h,l,c,u,d,p,x,y){ot.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,o,a,h,l,c,u,d,p,x,y)}set(t,e,i,s,n,r,o,a,h,l,c,u,d,p,x,y){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=s,g[1]=n,g[5]=r,g[9]=o,g[13]=a,g[2]=h,g[6]=l,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=x,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ot().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/Ht.setFromMatrixColumn(t,0).length(),n=1/Ht.setFromMatrixColumn(t,1).length(),r=1/Ht.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*r,e[9]=i[9]*r,e[10]=i[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,n=t.z,r=Math.cos(i),o=Math.sin(i),a=Math.cos(s),h=Math.sin(s),l=Math.cos(n),c=Math.sin(n);if(t.order==="XYZ"){const u=r*l,d=r*c,p=o*l,x=o*c;e[0]=a*l,e[4]=-a*c,e[8]=h,e[1]=d+p*h,e[5]=u-x*h,e[9]=-o*a,e[2]=x-u*h,e[6]=p+d*h,e[10]=r*a}else if(t.order==="YXZ"){const u=a*l,d=a*c,p=h*l,x=h*c;e[0]=u+x*o,e[4]=p*o-d,e[8]=r*h,e[1]=r*c,e[5]=r*l,e[9]=-o,e[2]=d*o-p,e[6]=x+u*o,e[10]=r*a}else if(t.order==="ZXY"){const u=a*l,d=a*c,p=h*l,x=h*c;e[0]=u-x*o,e[4]=-r*c,e[8]=p+d*o,e[1]=d+p*o,e[5]=r*l,e[9]=x-u*o,e[2]=-r*h,e[6]=o,e[10]=r*a}else if(t.order==="ZYX"){const u=r*l,d=r*c,p=o*l,x=o*c;e[0]=a*l,e[4]=p*h-d,e[8]=u*h+x,e[1]=a*c,e[5]=x*h+u,e[9]=d*h-p,e[2]=-h,e[6]=o*a,e[10]=r*a}else if(t.order==="YZX"){const u=r*a,d=r*h,p=o*a,x=o*h;e[0]=a*l,e[4]=x-u*c,e[8]=p*c+d,e[1]=c,e[5]=r*l,e[9]=-o*l,e[2]=-h*l,e[6]=d*c+p,e[10]=u-x*c}else if(t.order==="XZY"){const u=r*a,d=r*h,p=o*a,x=o*h;e[0]=a*l,e[4]=-c,e[8]=h*l,e[1]=u*c+x,e[5]=r*l,e[9]=d*c-p,e[2]=p*c-d,e[6]=o*l,e[10]=x*c+u}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(gs,t,bs)}lookAt(t,e,i){const s=this.elements;return st.subVectors(t,e),st.lengthSq()===0&&(st.z=1),st.normalize(),vt.crossVectors(i,st),vt.lengthSq()===0&&(Math.abs(i.z)===1?st.x+=1e-4:st.z+=1e-4,st.normalize(),vt.crossVectors(i,st)),vt.normalize(),Te.crossVectors(st,vt),s[0]=vt.x,s[4]=Te.x,s[8]=st.x,s[1]=vt.y,s[5]=Te.y,s[9]=st.y,s[2]=vt.z,s[6]=Te.z,s[10]=st.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],o=i[4],a=i[8],h=i[12],l=i[1],c=i[5],u=i[9],d=i[13],p=i[2],x=i[6],y=i[10],g=i[14],M=i[3],w=i[7],b=i[11],S=i[15],F=s[0],_=s[4],E=s[8],R=s[12],z=s[1],B=s[5],k=s[9],v=s[13],N=s[2],I=s[6],U=s[10],D=s[14],$=s[3],L=s[7],A=s[11],T=s[15];return n[0]=r*F+o*z+a*N+h*$,n[4]=r*_+o*B+a*I+h*L,n[8]=r*E+o*k+a*U+h*A,n[12]=r*R+o*v+a*D+h*T,n[1]=l*F+c*z+u*N+d*$,n[5]=l*_+c*B+u*I+d*L,n[9]=l*E+c*k+u*U+d*A,n[13]=l*R+c*v+u*D+d*T,n[2]=p*F+x*z+y*N+g*$,n[6]=p*_+x*B+y*I+g*L,n[10]=p*E+x*k+y*U+g*A,n[14]=p*R+x*v+y*D+g*T,n[3]=M*F+w*z+b*N+S*$,n[7]=M*_+w*B+b*I+S*L,n[11]=M*E+w*k+b*U+S*A,n[15]=M*R+w*v+b*D+S*T,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],n=t[12],r=t[1],o=t[5],a=t[9],h=t[13],l=t[2],c=t[6],u=t[10],d=t[14],p=t[3],x=t[7],y=t[11],g=t[15];return p*(+n*a*c-s*h*c-n*o*u+i*h*u+s*o*d-i*a*d)+x*(+e*a*d-e*h*u+n*r*u-s*r*d+s*h*l-n*a*l)+y*(+e*h*c-e*o*d-n*r*c+i*r*d+n*o*l-i*h*l)+g*(-s*o*l-e*a*c+e*o*u+s*r*c-i*r*u+i*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],l=t[8],c=t[9],u=t[10],d=t[11],p=t[12],x=t[13],y=t[14],g=t[15],M=c*y*h-x*u*h+x*a*d-o*y*d-c*a*g+o*u*g,w=p*u*h-l*y*h-p*a*d+r*y*d+l*a*g-r*u*g,b=l*x*h-p*c*h+p*o*d-r*x*d-l*o*g+r*c*g,S=p*c*a-l*x*a-p*o*u+r*x*u+l*o*y-r*c*y,F=e*M+i*w+s*b+n*S;if(F===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/F;return t[0]=M*_,t[1]=(x*u*n-c*y*n-x*s*d+i*y*d+c*s*g-i*u*g)*_,t[2]=(o*y*n-x*a*n+x*s*h-i*y*h-o*s*g+i*a*g)*_,t[3]=(c*a*n-o*u*n-c*s*h+i*u*h+o*s*d-i*a*d)*_,t[4]=w*_,t[5]=(l*y*n-p*u*n+p*s*d-e*y*d-l*s*g+e*u*g)*_,t[6]=(p*a*n-r*y*n-p*s*h+e*y*h+r*s*g-e*a*g)*_,t[7]=(r*u*n-l*a*n+l*s*h-e*u*h-r*s*d+e*a*d)*_,t[8]=b*_,t[9]=(p*c*n-l*x*n-p*i*d+e*x*d+l*i*g-e*c*g)*_,t[10]=(r*x*n-p*o*n+p*i*h-e*x*h-r*i*g+e*o*g)*_,t[11]=(l*o*n-r*c*n-l*i*h+e*c*h+r*i*d-e*o*d)*_,t[12]=S*_,t[13]=(l*x*s-p*c*s+p*i*u-e*x*u-l*i*y+e*c*y)*_,t[14]=(p*o*s-r*x*s-p*i*a+e*x*a+r*i*y-e*o*y)*_,t[15]=(r*c*s-l*o*s+l*i*a-e*c*a-r*i*u+e*o*u)*_,this}scale(t){const e=this.elements,i=t.x,s=t.y,n=t.z;return e[0]*=i,e[4]*=s,e[8]*=n,e[1]*=i,e[5]*=s,e[9]*=n,e[2]*=i,e[6]*=s,e[10]*=n,e[3]*=i,e[7]*=s,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),n=1-i,r=t.x,o=t.y,a=t.z,h=n*r,l=n*o;return this.set(h*r+i,h*o-s*a,h*a+s*o,0,h*o+s*a,l*o+i,l*a-s*r,0,h*a-s*o,l*a+s*r,n*a*a+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,n,r){return this.set(1,i,n,0,t,1,r,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,n=e._x,r=e._y,o=e._z,a=e._w,h=n+n,l=r+r,c=o+o,u=n*h,d=n*l,p=n*c,x=r*l,y=r*c,g=o*c,M=a*h,w=a*l,b=a*c,S=i.x,F=i.y,_=i.z;return s[0]=(1-(x+g))*S,s[1]=(d+b)*S,s[2]=(p-w)*S,s[3]=0,s[4]=(d-b)*F,s[5]=(1-(u+g))*F,s[6]=(y+M)*F,s[7]=0,s[8]=(p+w)*_,s[9]=(y-M)*_,s[10]=(1-(u+x))*_,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let n=Ht.set(s[0],s[1],s[2]).length();const r=Ht.set(s[4],s[5],s[6]).length(),o=Ht.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],dt.copy(this);const h=1/n,l=1/r,c=1/o;return dt.elements[0]*=h,dt.elements[1]*=h,dt.elements[2]*=h,dt.elements[4]*=l,dt.elements[5]*=l,dt.elements[6]*=l,dt.elements[8]*=c,dt.elements[9]*=c,dt.elements[10]*=c,e.setFromRotationMatrix(dt),i.x=n,i.y=r,i.z=o,this}makePerspective(t,e,i,s,n,r,o=2e3){const a=this.elements,h=2*n/(e-t),l=2*n/(i-s),c=(e+t)/(e-t),u=(i+s)/(i-s);let d,p;if(o===2e3)d=-(r+n)/(r-n),p=-2*r*n/(r-n);else if(o===2001)d=-r/(r-n),p=-r*n/(r-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return a[0]=h,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,i,s,n,r,o=2e3){const a=this.elements,h=1/(e-t),l=1/(i-s),c=1/(r-n),u=(e+t)*h,d=(i+s)*l;let p,x;if(o===2e3)p=(r+n)*c,x=-2*c;else if(o===2001)p=n*c,x=-1*c;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return a[0]=2*h,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=x,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const Ht=new f,dt=new ot,gs=new f(0,0,0),bs=new f(1,1,1),vt=new f,Te=new f,st=new f,Wi=new ot,Vi=new te;class Ce{constructor(t=0,e=0,i=0,s=Ce.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,n=s[0],r=s[4],o=s[8],a=s[1],h=s[5],l=s[9],c=s[2],u=s[6],d=s[10];switch(e){case"XYZ":this._y=Math.asin(et(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(u,h),this._z=0);break;case"YXZ":this._x=Math.asin(-et(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(a,h)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(et(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-r,h)):(this._y=0,this._z=Math.atan2(a,n));break;case"ZYX":this._y=Math.asin(-et(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(a,n)):(this._x=0,this._z=Math.atan2(-r,h));break;case"YZX":this._z=Math.asin(et(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-et(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(u,h),this._y=Math.atan2(o,n)):(this._x=Math.atan2(-l,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return Wi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Wi,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Vi.setFromEuler(this),this.setFromQuaternion(Vi,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ce.DEFAULT_ORDER="XYZ";class Ms{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let ws=0;const Ui=new f,Gt=new te,_t=new ot,ke=new f,se=new f,As=new f,_s=new te,Hi=new f(1,0,0),Gi=new f(0,1,0),Xi=new f(0,0,1),zs={type:"added"},Ss={type:"removed"};class pt extends Me{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ws++}),this.uuid=Qt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=pt.DEFAULT_UP.clone();const t=new f,e=new Ce,i=new te,s=new f(1,1,1);function n(){i.setFromEuler(e,!1)}function r(){e.setFromQuaternion(i,void 0,!1)}e._onChange(n),i._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new ot},normalMatrix:{value:new Bt}}),this.matrix=new ot,this.matrixWorld=new ot,this.matrixAutoUpdate=pt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=pt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ms,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Gt.setFromAxisAngle(t,e),this.quaternion.multiply(Gt),this}rotateOnWorldAxis(t,e){return Gt.setFromAxisAngle(t,e),this.quaternion.premultiply(Gt),this}rotateX(t){return this.rotateOnAxis(Hi,t)}rotateY(t){return this.rotateOnAxis(Gi,t)}rotateZ(t){return this.rotateOnAxis(Xi,t)}translateOnAxis(t,e){return Ui.copy(t).applyQuaternion(this.quaternion),this.position.add(Ui.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Hi,t)}translateY(t){return this.translateOnAxis(Gi,t)}translateZ(t){return this.translateOnAxis(Xi,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(_t.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?ke.copy(t):ke.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),se.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_t.lookAt(se,ke,this.up):_t.lookAt(ke,se,this.up),this.quaternion.setFromRotationMatrix(_t),s&&(_t.extractRotation(s.matrixWorld),Gt.setFromRotationMatrix(_t),this.quaternion.premultiply(Gt.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(zs)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Ss)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),_t.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),_t.multiply(t.parent.matrixWorld)),t.applyMatrix4(_t),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const r=this.children[i].getObjectByProperty(t,e);if(r!==void 0)return r}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const s=this.children;for(let n=0,r=s.length;n<r;n++)s[n].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(se,t,As),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(se,_s,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++){const n=e[i];(n.matrixWorldAutoUpdate===!0||t===!0)&&n.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const s=this.children;for(let n=0,r=s.length;n<r;n++){const o=s[n];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),s.maxGeometryCount=this._maxGeometryCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function n(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(t)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let h=0,l=a.length;h<l;h++){const c=a[h];n(t.shapes,c)}else n(t.shapes,a)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,h=this.material.length;a<h;a++)o.push(n(t.materials,this.material[a]));s.material=o}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const a=this.animations[o];s.animations.push(n(t.animations,a))}}if(e){const o=r(t.geometries),a=r(t.materials),h=r(t.textures),l=r(t.images),c=r(t.shapes),u=r(t.skeletons),d=r(t.animations),p=r(t.nodes);o.length>0&&(i.geometries=o),a.length>0&&(i.materials=a),h.length>0&&(i.textures=h),l.length>0&&(i.images=l),c.length>0&&(i.shapes=c),u.length>0&&(i.skeletons=u),d.length>0&&(i.animations=d),p.length>0&&(i.nodes=p)}return i.object=s,i;function r(o){const a=[];for(const h in o){const l=o[h];delete l.metadata,a.push(l)}return a}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}pt.DEFAULT_UP=new f(0,1,0),pt.DEFAULT_MATRIX_AUTO_UPDATE=!0,pt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const mt=new f,zt=new f,oi=new f,St=new f,Xt=new f,Yt=new f,Yi=new f,ai=new f,hi=new f,li=new f;class yt{constructor(t=new f,e=new f,i=new f){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),mt.subVectors(t,e),s.cross(mt);const n=s.lengthSq();return n>0?s.multiplyScalar(1/Math.sqrt(n)):s.set(0,0,0)}static getBarycoord(t,e,i,s,n){mt.subVectors(s,e),zt.subVectors(i,e),oi.subVectors(t,e);const r=mt.dot(mt),o=mt.dot(zt),a=mt.dot(oi),h=zt.dot(zt),l=zt.dot(oi),c=r*h-o*o;if(c===0)return n.set(0,0,0),null;const u=1/c,d=(h*a-o*l)*u,p=(r*l-o*a)*u;return n.set(1-d-p,p,d)}static containsPoint(t,e,i,s){return this.getBarycoord(t,e,i,s,St)===null?!1:St.x>=0&&St.y>=0&&St.x+St.y<=1}static getInterpolation(t,e,i,s,n,r,o,a){return this.getBarycoord(t,e,i,s,St)===null?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(n,St.x),a.addScaledVector(r,St.y),a.addScaledVector(o,St.z),a)}static isFrontFacing(t,e,i,s){return mt.subVectors(i,e),zt.subVectors(t,e),mt.cross(zt).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return mt.subVectors(this.c,this.b),zt.subVectors(this.a,this.b),mt.cross(zt).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return yt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return yt.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,s,n){return yt.getInterpolation(t,this.a,this.b,this.c,e,i,s,n)}containsPoint(t){return yt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return yt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,n=this.c;let r,o;Xt.subVectors(s,i),Yt.subVectors(n,i),ai.subVectors(t,i);const a=Xt.dot(ai),h=Yt.dot(ai);if(a<=0&&h<=0)return e.copy(i);hi.subVectors(t,s);const l=Xt.dot(hi),c=Yt.dot(hi);if(l>=0&&c<=l)return e.copy(s);const u=a*c-l*h;if(u<=0&&a>=0&&l<=0)return r=a/(a-l),e.copy(i).addScaledVector(Xt,r);li.subVectors(t,n);const d=Xt.dot(li),p=Yt.dot(li);if(p>=0&&d<=p)return e.copy(n);const x=d*h-a*p;if(x<=0&&h>=0&&p<=0)return o=h/(h-p),e.copy(i).addScaledVector(Yt,o);const y=l*p-d*c;if(y<=0&&c-l>=0&&d-p>=0)return Yi.subVectors(n,s),o=(c-l)/(c-l+(d-p)),e.copy(s).addScaledVector(Yi,o);const g=1/(y+x+u);return r=x*g,o=u*g,e.copy(i).addScaledVector(Xt,r).addScaledVector(Yt,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const ji={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Dt={h:0,s:0,l:0},Ee={h:0,s:0,l:0};function ci(m,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?m+(t-m)*6*e:e<1/2?t:e<2/3?m+(t-m)*6*(2/3-e):m}class nt{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=lt){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,ct.toWorkingColorSpace(this,e),this}setRGB(t,e,i,s=ct.workingColorSpace){return this.r=t,this.g=e,this.b=i,ct.toWorkingColorSpace(this,s),this}setHSL(t,e,i,s=ct.workingColorSpace){if(t=cs(t,1),e=et(e,0,1),i=et(i,0,1),e===0)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=ci(r,n,t+1/3),this.g=ci(r,n,t),this.b=ci(r,n,t-1/3)}return ct.toWorkingColorSpace(this,s),this}setStyle(t,e=lt){function i(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;const r=s[1],o=s[2];switch(r){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,e);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,e);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=s[1],r=n.length;if(r===3)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(r===6)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=lt){const i=ji[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=qt(t.r),this.g=qt(t.g),this.b=qt(t.b),this}copyLinearToSRGB(t){return this.r=Je(t.r),this.g=Je(t.g),this.b=Je(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=lt){return ct.fromWorkingColorSpace(K.copy(this),t),Math.round(et(K.r*255,0,255))*65536+Math.round(et(K.g*255,0,255))*256+Math.round(et(K.b*255,0,255))}getHexString(t=lt){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=ct.workingColorSpace){ct.fromWorkingColorSpace(K.copy(this),e);const i=K.r,s=K.g,n=K.b,r=Math.max(i,s,n),o=Math.min(i,s,n);let a,h;const l=(o+r)/2;if(o===r)a=0,h=0;else{const c=r-o;switch(h=l<=.5?c/(r+o):c/(2-r-o),r){case i:a=(s-n)/c+(s<n?6:0);break;case s:a=(n-i)/c+2;break;case n:a=(i-s)/c+4;break}a/=6}return t.h=a,t.s=h,t.l=l,t}getRGB(t,e=ct.workingColorSpace){return ct.fromWorkingColorSpace(K.copy(this),e),t.r=K.r,t.g=K.g,t.b=K.b,t}getStyle(t=lt){ct.fromWorkingColorSpace(K.copy(this),t);const e=K.r,i=K.g,s=K.b;return t!==lt?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(t,e,i){return this.getHSL(Dt),this.setHSL(Dt.h+t,Dt.s+e,Dt.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(Dt),t.getHSL(Ee);const i=Ze(Dt.h,Ee.h,e),s=Ze(Dt.s,Ee.s,e),n=Ze(Dt.l,Ee.l,e);return this.setHSL(i,s,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,s=this.b,n=t.elements;return this.r=n[0]*e+n[3]*i+n[6]*s,this.g=n[1]*e+n[4]*i+n[7]*s,this.b=n[2]*e+n[5]*i+n[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const K=new nt;nt.NAMES=ji;let Fs=0;class ui extends Me{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Fs++}),this.uuid=Qt(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new nt(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(i.blending=this.blending),this.side!==0&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==204&&(i.blendSrc=this.blendSrc),this.blendDst!==205&&(i.blendDst=this.blendDst),this.blendEquation!==100&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==3&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==519&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==7680&&(i.stencilFail=this.stencilFail),this.stencilZFail!==7680&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==7680&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(n){const r=[];for(const o in n){const a=n[o];delete a.metadata,r.push(a)}return r}if(e){const n=s(t.textures),r=s(t.images);n.length>0&&(i.textures=n),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const s=e.length;i=new Array(s);for(let n=0;n!==s;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Bs extends ui{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new nt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Y=new f,ve=new j;class xt{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return we("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)ve.fromBufferAttribute(this,e),ve.applyMatrix3(t),this.setXY(e,ve.x,ve.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)Y.fromBufferAttribute(this,e),Y.applyMatrix3(t),this.setXYZ(e,Y.x,Y.y,Y.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)Y.fromBufferAttribute(this,e),Y.applyMatrix4(t),this.setXYZ(e,Y.x,Y.y,Y.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)Y.fromBufferAttribute(this,e),Y.applyNormalMatrix(t),this.setXYZ(e,Y.x,Y.y,Y.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)Y.fromBufferAttribute(this,e),Y.transformDirection(t),this.setXYZ(e,Y.x,Y.y,Y.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=Kt(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=it(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Kt(e,this.array)),e}setX(t,e){return this.normalized&&(e=it(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Kt(e,this.array)),e}setY(t,e){return this.normalized&&(e=it(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Kt(e,this.array)),e}setZ(t,e){return this.normalized&&(e=it(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Kt(e,this.array)),e}setW(t,e){return this.normalized&&(e=it(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=it(e,this.array),i=it(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=it(e,this.array),i=it(i,this.array),s=it(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,n){return t*=this.itemSize,this.normalized&&(e=it(e,this.array),i=it(i,this.array),s=it(s,this.array),n=it(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==35044&&(t.usage=this.usage),t}}class Ts extends xt{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Cs extends xt{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class at extends xt{constructor(t,e,i){super(new Float32Array(t),e,i)}}let ks=0;const ht=new ot,di=new pt,jt=new f,rt=new ft,ne=new ft,Z=new f;class Rt extends Me{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ks++}),this.uuid=Qt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(us(t)?Cs:Ts)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new Bt().getNormalMatrix(t);i.applyNormalMatrix(n),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return ht.makeRotationFromQuaternion(t),this.applyMatrix4(ht),this}rotateX(t){return ht.makeRotationX(t),this.applyMatrix4(ht),this}rotateY(t){return ht.makeRotationY(t),this.applyMatrix4(ht),this}rotateZ(t){return ht.makeRotationZ(t),this.applyMatrix4(ht),this}translate(t,e,i){return ht.makeTranslation(t,e,i),this.applyMatrix4(ht),this}scale(t,e,i){return ht.makeScale(t,e,i),this.applyMatrix4(ht),this}lookAt(t){return di.lookAt(t),di.updateMatrix(),this.applyMatrix4(di.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(jt).negate(),this.translate(jt.x,jt.y,jt.z),this}setFromPoints(t){const e=[];for(let i=0,s=t.length;i<s;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new at(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ft);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new f(-1/0,-1/0,-1/0),new f(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const n=e[i];rt.setFromBufferAttribute(n),this.morphTargetsRelative?(Z.addVectors(this.boundingBox.min,rt.min),this.boundingBox.expandByPoint(Z),Z.addVectors(this.boundingBox.max,rt.max),this.boundingBox.expandByPoint(Z)):(this.boundingBox.expandByPoint(rt.min),this.boundingBox.expandByPoint(rt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ii);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new f,1/0);return}if(t){const i=this.boundingSphere.center;if(rt.setFromBufferAttribute(t),e)for(let n=0,r=e.length;n<r;n++){const o=e[n];ne.setFromBufferAttribute(o),this.morphTargetsRelative?(Z.addVectors(rt.min,ne.min),rt.expandByPoint(Z),Z.addVectors(rt.max,ne.max),rt.expandByPoint(Z)):(rt.expandByPoint(ne.min),rt.expandByPoint(ne.max))}rt.getCenter(i);let s=0;for(let n=0,r=t.count;n<r;n++)Z.fromBufferAttribute(t,n),s=Math.max(s,i.distanceToSquared(Z));if(e)for(let n=0,r=e.length;n<r;n++){const o=e[n],a=this.morphTargetsRelative;for(let h=0,l=o.count;h<l;h++)Z.fromBufferAttribute(o,h),a&&(jt.fromBufferAttribute(t,h),Z.add(jt)),s=Math.max(s,i.distanceToSquared(Z))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.array,s=e.position.array,n=e.normal.array,r=e.uv.array,o=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new xt(new Float32Array(4*o),4));const a=this.getAttribute("tangent").array,h=[],l=[];for(let z=0;z<o;z++)h[z]=new f,l[z]=new f;const c=new f,u=new f,d=new f,p=new j,x=new j,y=new j,g=new f,M=new f;function w(z,B,k){c.fromArray(s,z*3),u.fromArray(s,B*3),d.fromArray(s,k*3),p.fromArray(r,z*2),x.fromArray(r,B*2),y.fromArray(r,k*2),u.sub(c),d.sub(c),x.sub(p),y.sub(p);const v=1/(x.x*y.y-y.x*x.y);isFinite(v)&&(g.copy(u).multiplyScalar(y.y).addScaledVector(d,-x.y).multiplyScalar(v),M.copy(d).multiplyScalar(x.x).addScaledVector(u,-y.x).multiplyScalar(v),h[z].add(g),h[B].add(g),h[k].add(g),l[z].add(M),l[B].add(M),l[k].add(M))}let b=this.groups;b.length===0&&(b=[{start:0,count:i.length}]);for(let z=0,B=b.length;z<B;++z){const k=b[z],v=k.start,N=k.count;for(let I=v,U=v+N;I<U;I+=3)w(i[I+0],i[I+1],i[I+2])}const S=new f,F=new f,_=new f,E=new f;function R(z){_.fromArray(n,z*3),E.copy(_);const B=h[z];S.copy(B),S.sub(_.multiplyScalar(_.dot(B))).normalize(),F.crossVectors(E,B);const v=F.dot(l[z])<0?-1:1;a[z*4]=S.x,a[z*4+1]=S.y,a[z*4+2]=S.z,a[z*4+3]=v}for(let z=0,B=b.length;z<B;++z){const k=b[z],v=k.start,N=k.count;for(let I=v,U=v+N;I<U;I+=3)R(i[I+0]),R(i[I+1]),R(i[I+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new xt(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let u=0,d=i.count;u<d;u++)i.setXYZ(u,0,0,0);const s=new f,n=new f,r=new f,o=new f,a=new f,h=new f,l=new f,c=new f;if(t)for(let u=0,d=t.count;u<d;u+=3){const p=t.getX(u+0),x=t.getX(u+1),y=t.getX(u+2);s.fromBufferAttribute(e,p),n.fromBufferAttribute(e,x),r.fromBufferAttribute(e,y),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),o.fromBufferAttribute(i,p),a.fromBufferAttribute(i,x),h.fromBufferAttribute(i,y),o.add(l),a.add(l),h.add(l),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(x,a.x,a.y,a.z),i.setXYZ(y,h.x,h.y,h.z)}else for(let u=0,d=e.count;u<d;u+=3)s.fromBufferAttribute(e,u+0),n.fromBufferAttribute(e,u+1),r.fromBufferAttribute(e,u+2),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),i.setXYZ(u+0,l.x,l.y,l.z),i.setXYZ(u+1,l.x,l.y,l.z),i.setXYZ(u+2,l.x,l.y,l.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)Z.fromBufferAttribute(t,e),Z.normalize(),t.setXYZ(e,Z.x,Z.y,Z.z)}toNonIndexed(){function t(o,a){const h=o.array,l=o.itemSize,c=o.normalized,u=new h.constructor(a.length*l);let d=0,p=0;for(let x=0,y=a.length;x<y;x++){o.isInterleavedBufferAttribute?d=a[x]*o.data.stride+o.offset:d=a[x]*l;for(let g=0;g<l;g++)u[p++]=h[d++]}return new xt(u,l,c)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Rt,i=this.index.array,s=this.attributes;for(const o in s){const a=s[o],h=t(a,i);e.setAttribute(o,h)}const n=this.morphAttributes;for(const o in n){const a=[],h=n[o];for(let l=0,c=h.length;l<c;l++){const u=h[l],d=t(u,i);a.push(d)}e.morphAttributes[o]=a}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let o=0,a=r.length;o<a;o++){const h=r[o];e.addGroup(h.start,h.count,h.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const h in a)a[h]!==void 0&&(t[h]=a[h]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const a in i){const h=i[a];t.data.attributes[a]=h.toJSON(t.data)}const s={};let n=!1;for(const a in this.morphAttributes){const h=this.morphAttributes[a],l=[];for(let c=0,u=h.length;c<u;c++){const d=h[c];l.push(d.toJSON(t.data))}l.length>0&&(s[a]=l,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const h in s){const l=s[h];this.setAttribute(h,l.clone(e))}const n=t.morphAttributes;for(const h in n){const l=[],c=n[h];for(let u=0,d=c.length;u<d;u++)l.push(c[u].clone(e));this.morphAttributes[h]=l}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let h=0,l=r.length;h<l;h++){const c=r[h];this.addGroup(c.start,c.count,c.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Zi=new ot,Ot=new Li,De=new ii,$i=new f,Zt=new f,$t=new f,Jt=new f,pi=new f,Re=new f,Ie=new j,Pe=new j,Ne=new j,Ji=new f,Qi=new f,Ki=new f,Oe=new f,qe=new f;class Es extends pt{constructor(t=new Rt,e=new Bs){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,r=s.length;n<r;n++){const o=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=n}}}}getVertexPosition(t,e){const i=this.geometry,s=i.attributes.position,n=i.morphAttributes.position,r=i.morphTargetsRelative;e.fromBufferAttribute(s,t);const o=this.morphTargetInfluences;if(n&&o){Re.set(0,0,0);for(let a=0,h=n.length;a<h;a++){const l=o[a],c=n[a];l!==0&&(pi.fromBufferAttribute(c,t),r?Re.addScaledVector(pi,l):Re.addScaledVector(pi.sub(e),l))}e.add(Re)}return e}raycast(t,e){const i=this.geometry,s=this.material,n=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),De.copy(i.boundingSphere),De.applyMatrix4(n),Ot.copy(t.ray).recast(t.near),!(De.containsPoint(Ot.origin)===!1&&(Ot.intersectSphere(De,$i)===null||Ot.origin.distanceToSquared($i)>(t.far-t.near)**2))&&(Zi.copy(n).invert(),Ot.copy(t.ray).applyMatrix4(Zi),!(i.boundingBox!==null&&Ot.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,Ot)))}_computeIntersections(t,e,i){let s;const n=this.geometry,r=this.material,o=n.index,a=n.attributes.position,h=n.attributes.uv,l=n.attributes.uv1,c=n.attributes.normal,u=n.groups,d=n.drawRange;if(o!==null)if(Array.isArray(r))for(let p=0,x=u.length;p<x;p++){const y=u[p],g=r[y.materialIndex],M=Math.max(y.start,d.start),w=Math.min(o.count,Math.min(y.start+y.count,d.start+d.count));for(let b=M,S=w;b<S;b+=3){const F=o.getX(b),_=o.getX(b+1),E=o.getX(b+2);s=Le(this,g,t,i,h,l,c,F,_,E),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,d.start),x=Math.min(o.count,d.start+d.count);for(let y=p,g=x;y<g;y+=3){const M=o.getX(y),w=o.getX(y+1),b=o.getX(y+2);s=Le(this,r,t,i,h,l,c,M,w,b),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}else if(a!==void 0)if(Array.isArray(r))for(let p=0,x=u.length;p<x;p++){const y=u[p],g=r[y.materialIndex],M=Math.max(y.start,d.start),w=Math.min(a.count,Math.min(y.start+y.count,d.start+d.count));for(let b=M,S=w;b<S;b+=3){const F=b,_=b+1,E=b+2;s=Le(this,g,t,i,h,l,c,F,_,E),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,d.start),x=Math.min(a.count,d.start+d.count);for(let y=p,g=x;y<g;y+=3){const M=y,w=y+1,b=y+2;s=Le(this,r,t,i,h,l,c,M,w,b),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}}}function vs(m,t,e,i,s,n,r,o){let a;if(t.side===1?a=i.intersectTriangle(r,n,s,!0,o):a=i.intersectTriangle(s,n,r,t.side===0,o),a===null)return null;qe.copy(o),qe.applyMatrix4(m.matrixWorld);const h=e.ray.origin.distanceTo(qe);return h<e.near||h>e.far?null:{distance:h,point:qe.clone(),object:m}}function Le(m,t,e,i,s,n,r,o,a,h){m.getVertexPosition(o,Zt),m.getVertexPosition(a,$t),m.getVertexPosition(h,Jt);const l=vs(m,t,e,i,Zt,$t,Jt,Oe);if(l){s&&(Ie.fromBufferAttribute(s,o),Pe.fromBufferAttribute(s,a),Ne.fromBufferAttribute(s,h),l.uv=yt.getInterpolation(Oe,Zt,$t,Jt,Ie,Pe,Ne,new j)),n&&(Ie.fromBufferAttribute(n,o),Pe.fromBufferAttribute(n,a),Ne.fromBufferAttribute(n,h),l.uv1=yt.getInterpolation(Oe,Zt,$t,Jt,Ie,Pe,Ne,new j),l.uv2=l.uv1),r&&(Ji.fromBufferAttribute(r,o),Qi.fromBufferAttribute(r,a),Ki.fromBufferAttribute(r,h),l.normal=yt.getInterpolation(Oe,Zt,$t,Jt,Ji,Qi,Ki,new f),l.normal.dot(i.direction)>0&&l.normal.multiplyScalar(-1));const c={a:o,b:a,c:h,normal:new f,materialIndex:0};yt.getNormal(Zt,$t,Jt,c.normal),l.face=c}return l}class mi extends Rt{constructor(t=1,e=1,i=1,s=1,n=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:s,heightSegments:n,depthSegments:r};const o=this;s=Math.floor(s),n=Math.floor(n),r=Math.floor(r);const a=[],h=[],l=[],c=[];let u=0,d=0;p("z","y","x",-1,-1,i,e,t,r,n,0),p("z","y","x",1,-1,i,e,-t,r,n,1),p("x","z","y",1,1,t,i,e,s,r,2),p("x","z","y",1,-1,t,i,-e,s,r,3),p("x","y","z",1,-1,t,e,i,s,n,4),p("x","y","z",-1,-1,t,e,-i,s,n,5),this.setIndex(a),this.setAttribute("position",new at(h,3)),this.setAttribute("normal",new at(l,3)),this.setAttribute("uv",new at(c,2));function p(x,y,g,M,w,b,S,F,_,E,R){const z=b/_,B=S/E,k=b/2,v=S/2,N=F/2,I=_+1,U=E+1;let D=0,$=0;const L=new f;for(let A=0;A<U;A++){const T=A*B-v;for(let W=0;W<I;W++){const q=W*z-k;L[x]=q*M,L[y]=T*w,L[g]=N,h.push(L.x,L.y,L.z),L[x]=0,L[y]=0,L[g]=F>0?1:-1,l.push(L.x,L.y,L.z),c.push(W/_),c.push(1-A/E),D+=1}}for(let A=0;A<E;A++)for(let T=0;T<_;T++){const W=u+T+I*A,q=u+T+I*(A+1),H=u+(T+1)+I*(A+1),C=u+(T+1)+I*A;a.push(W,q,C),a.push(q,H,C),$+=6}o.addGroup(d,$,R),d+=$,u+=D}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new mi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}class We extends Rt{constructor(t=1,e=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:s};const n=t/2,r=e/2,o=Math.floor(i),a=Math.floor(s),h=o+1,l=a+1,c=t/o,u=e/a,d=[],p=[],x=[],y=[];for(let g=0;g<l;g++){const M=g*u-r;for(let w=0;w<h;w++){const b=w*c-n;p.push(b,-M,0),x.push(0,0,1),y.push(w/o),y.push(1-g/a)}}for(let g=0;g<a;g++)for(let M=0;M<o;M++){const w=M+h*g,b=M+h*(g+1),S=M+1+h*(g+1),F=M+1+h*g;d.push(w,b,F),d.push(b,S,F)}this.setIndex(d),this.setAttribute("position",new at(p,3)),this.setAttribute("normal",new at(x,3)),this.setAttribute("uv",new at(y,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new We(t.width,t.height,t.widthSegments,t.heightSegments)}}class Ds extends Tt{constructor(t,e,i,s,n,r,o,a,h,l){if(l=l!==void 0?l:1026,l!==1026&&l!==1027)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&l===1026&&(i=1014),i===void 0&&l===1027&&(i=1020),super(null,s,n,r,o,a,l,i,h),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=o!==void 0?o:1003,this.minFilter=a!==void 0?a:1003,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}const Rs=new Ds(1,1);Rs.compareFunction=515;class ts extends ui{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new nt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const es=new ot,fi=new Li,Ve=new ii,Ue=new f;class Is extends pt{constructor(t=new Rt,e=new ts){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const i=this.geometry,s=this.matrixWorld,n=t.params.Points.threshold,r=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ve.copy(i.boundingSphere),Ve.applyMatrix4(s),Ve.radius+=n,t.ray.intersectsSphere(Ve)===!1)return;es.copy(s).invert(),fi.copy(t.ray).applyMatrix4(es);const o=n/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,h=i.index,c=i.attributes.position;if(h!==null){const u=Math.max(0,r.start),d=Math.min(h.count,r.start+r.count);for(let p=u,x=d;p<x;p++){const y=h.getX(p);Ue.fromBufferAttribute(c,y),is(Ue,y,a,s,t,e,this)}}else{const u=Math.max(0,r.start),d=Math.min(c.count,r.start+r.count);for(let p=u,x=d;p<x;p++)Ue.fromBufferAttribute(c,p),is(Ue,p,a,s,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,r=s.length;n<r;n++){const o=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=n}}}}}function is(m,t,e,i,s,n,r){const o=fi.distanceSqToPoint(m);if(o<e){const a=new f;fi.closestPointToPoint(m,a),a.applyMatrix4(i);const h=s.ray.origin.distanceTo(a);if(h<s.near||h>s.far)return;n.push({distance:h,distanceToRay:Math.sqrt(o),point:a,index:t,face:null,object:r})}}class yi extends Rt{constructor(t=[],e=[],i=1,s=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:s};const n=[],r=[];o(s),h(i),l(),this.setAttribute("position",new at(n,3)),this.setAttribute("normal",new at(n.slice(),3)),this.setAttribute("uv",new at(r,2)),s===0?this.computeVertexNormals():this.normalizeNormals();function o(M){const w=new f,b=new f,S=new f;for(let F=0;F<e.length;F+=3)d(e[F+0],w),d(e[F+1],b),d(e[F+2],S),a(w,b,S,M)}function a(M,w,b,S){const F=S+1,_=[];for(let E=0;E<=F;E++){_[E]=[];const R=M.clone().lerp(b,E/F),z=w.clone().lerp(b,E/F),B=F-E;for(let k=0;k<=B;k++)k===0&&E===F?_[E][k]=R:_[E][k]=R.clone().lerp(z,k/B)}for(let E=0;E<F;E++)for(let R=0;R<2*(F-E)-1;R++){const z=Math.floor(R/2);R%2===0?(u(_[E][z+1]),u(_[E+1][z]),u(_[E][z])):(u(_[E][z+1]),u(_[E+1][z+1]),u(_[E+1][z]))}}function h(M){const w=new f;for(let b=0;b<n.length;b+=3)w.x=n[b+0],w.y=n[b+1],w.z=n[b+2],w.normalize().multiplyScalar(M),n[b+0]=w.x,n[b+1]=w.y,n[b+2]=w.z}function l(){const M=new f;for(let w=0;w<n.length;w+=3){M.x=n[w+0],M.y=n[w+1],M.z=n[w+2];const b=y(M)/2/Math.PI+.5,S=g(M)/Math.PI+.5;r.push(b,1-S)}p(),c()}function c(){for(let M=0;M<r.length;M+=6){const w=r[M+0],b=r[M+2],S=r[M+4],F=Math.max(w,b,S),_=Math.min(w,b,S);F>.9&&_<.1&&(w<.2&&(r[M+0]+=1),b<.2&&(r[M+2]+=1),S<.2&&(r[M+4]+=1))}}function u(M){n.push(M.x,M.y,M.z)}function d(M,w){const b=M*3;w.x=t[b+0],w.y=t[b+1],w.z=t[b+2]}function p(){const M=new f,w=new f,b=new f,S=new f,F=new j,_=new j,E=new j;for(let R=0,z=0;R<n.length;R+=9,z+=6){M.set(n[R+0],n[R+1],n[R+2]),w.set(n[R+3],n[R+4],n[R+5]),b.set(n[R+6],n[R+7],n[R+8]),F.set(r[z+0],r[z+1]),_.set(r[z+2],r[z+3]),E.set(r[z+4],r[z+5]),S.copy(M).add(w).add(b).divideScalar(3);const B=y(S);x(F,z+0,M,B),x(_,z+2,w,B),x(E,z+4,b,B)}}function x(M,w,b,S){S<0&&M.x===1&&(r[w]=M.x-1),b.x===0&&b.z===0&&(r[w]=S/2/Math.PI+.5)}function y(M){return Math.atan2(M.z,-M.x)}function g(M){return Math.atan2(-M.y,Math.sqrt(M.x*M.x+M.z*M.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new yi(t.vertices,t.indices,t.radius,t.details)}}class He extends yi{constructor(t=1,e=0){const i=(1+Math.sqrt(5))/2,s=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],n=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(s,n,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new He(t.radius,t.detail)}}class ss extends ui{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new nt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new nt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ki}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ki);const ns=Math.sqrt(3),rs=Math.sqrt(5),Ps=.5*(ns-1),re=(3-ns)/6,Ns=1/3,gt=1/6,Os=(rs-1)/4,J=(5-rs)/20,Ft=m=>Math.floor(m)|0,os=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]),xi=new Float64Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]),Ge=new Float64Array([0,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,1,0,1,1,1,0,1,-1,1,0,-1,1,1,0,-1,-1,-1,0,1,1,-1,0,1,-1,-1,0,-1,1,-1,0,-1,-1,1,1,0,1,1,1,0,-1,1,-1,0,1,1,-1,0,-1,-1,1,0,1,-1,1,0,-1,-1,-1,0,1,-1,-1,0,-1,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,0]);function qs(m=Math.random){const t=gi(m),e=new Float64Array(t).map(s=>os[s%12*2]),i=new Float64Array(t).map(s=>os[s%12*2+1]);return function(n,r){let o=0,a=0,h=0;const l=(n+r)*Ps,c=Ft(n+l),u=Ft(r+l),d=(c+u)*re,p=c-d,x=u-d,y=n-p,g=r-x;let M,w;y>g?(M=1,w=0):(M=0,w=1);const b=y-M+re,S=g-w+re,F=y-1+2*re,_=g-1+2*re,E=c&255,R=u&255;let z=.5-y*y-g*g;if(z>=0){const v=E+t[R],N=e[v],I=i[v];z*=z,o=z*z*(N*y+I*g)}let B=.5-b*b-S*S;if(B>=0){const v=E+M+t[R+w],N=e[v],I=i[v];B*=B,a=B*B*(N*b+I*S)}let k=.5-F*F-_*_;if(k>=0){const v=E+1+t[R+1],N=e[v],I=i[v];k*=k,h=k*k*(N*F+I*_)}return 70*(o+a+h)}}function Ls(m=Math.random){const t=gi(m),e=new Float64Array(t).map(n=>xi[n%12*3]),i=new Float64Array(t).map(n=>xi[n%12*3+1]),s=new Float64Array(t).map(n=>xi[n%12*3+2]);return function(r,o,a){let h,l,c,u;const d=(r+o+a)*Ns,p=Ft(r+d),x=Ft(o+d),y=Ft(a+d),g=(p+x+y)*gt,M=p-g,w=x-g,b=y-g,S=r-M,F=o-w,_=a-b;let E,R,z,B,k,v;S>=F?F>=_?(E=1,R=0,z=0,B=1,k=1,v=0):S>=_?(E=1,R=0,z=0,B=1,k=0,v=1):(E=0,R=0,z=1,B=1,k=0,v=1):F<_?(E=0,R=0,z=1,B=0,k=1,v=1):S<_?(E=0,R=1,z=0,B=0,k=1,v=1):(E=0,R=1,z=0,B=1,k=1,v=0);const N=S-E+gt,I=F-R+gt,U=_-z+gt,D=S-B+2*gt,$=F-k+2*gt,L=_-v+2*gt,A=S-1+3*gt,T=F-1+3*gt,W=_-1+3*gt,q=p&255,H=x&255,C=y&255;let P=.6-S*S-F*F-_*_;if(P<0)h=0;else{const G=q+t[H+t[C]];P*=P,h=P*P*(e[G]*S+i[G]*F+s[G]*_)}let tt=.6-N*N-I*I-U*U;if(tt<0)l=0;else{const G=q+E+t[H+R+t[C+z]];tt*=tt,l=tt*tt*(e[G]*N+i[G]*I+s[G]*U)}let V=.6-D*D-$*$-L*L;if(V<0)c=0;else{const G=q+B+t[H+k+t[C+v]];V*=V,c=V*V*(e[G]*D+i[G]*$+s[G]*L)}let O=.6-A*A-T*T-W*W;if(O<0)u=0;else{const G=q+1+t[H+1+t[C+1]];O*=O,u=O*O*(e[G]*A+i[G]*T+s[G]*W)}return 32*(h+l+c+u)}}function Ws(m=Math.random){const t=gi(m),e=new Float64Array(t).map(r=>Ge[r%32*4]),i=new Float64Array(t).map(r=>Ge[r%32*4+1]),s=new Float64Array(t).map(r=>Ge[r%32*4+2]),n=new Float64Array(t).map(r=>Ge[r%32*4+3]);return function(o,a,h,l){let c,u,d,p,x;const y=(o+a+h+l)*Os,g=Ft(o+y),M=Ft(a+y),w=Ft(h+y),b=Ft(l+y),S=(g+M+w+b)*J,F=g-S,_=M-S,E=w-S,R=b-S,z=o-F,B=a-_,k=h-E,v=l-R;let N=0,I=0,U=0,D=0;z>B?N++:I++,z>k?N++:U++,z>v?N++:D++,B>k?I++:U++,B>v?I++:D++,k>v?U++:D++;const $=N>=3?1:0,L=I>=3?1:0,A=U>=3?1:0,T=D>=3?1:0,W=N>=2?1:0,q=I>=2?1:0,H=U>=2?1:0,C=D>=2?1:0,P=N>=1?1:0,tt=I>=1?1:0,V=U>=1?1:0,O=D>=1?1:0,G=z-$+J,Mt=B-L+J,oe=k-A+J,ae=v-T+J,he=z-W+2*J,le=B-q+2*J,Mi=k-H+2*J,wi=v-C+2*J,Ai=z-P+3*J,_i=B-tt+3*J,zi=k-V+3*J,Si=v-O+3*J,Fi=z-1+4*J,Bi=B-1+4*J,Ti=k-1+4*J,Ci=v-1+4*J,ce=g&255,ue=M&255,de=w&255,pe=b&255;let me=.6-z*z-B*B-k*k-v*v;if(me<0)c=0;else{const X=ce+t[ue+t[de+t[pe]]];me*=me,c=me*me*(e[X]*z+i[X]*B+s[X]*k+n[X]*v)}let fe=.6-G*G-Mt*Mt-oe*oe-ae*ae;if(fe<0)u=0;else{const X=ce+$+t[ue+L+t[de+A+t[pe+T]]];fe*=fe,u=fe*fe*(e[X]*G+i[X]*Mt+s[X]*oe+n[X]*ae)}let ye=.6-he*he-le*le-Mi*Mi-wi*wi;if(ye<0)d=0;else{const X=ce+W+t[ue+q+t[de+H+t[pe+C]]];ye*=ye,d=ye*ye*(e[X]*he+i[X]*le+s[X]*Mi+n[X]*wi)}let xe=.6-Ai*Ai-_i*_i-zi*zi-Si*Si;if(xe<0)p=0;else{const X=ce+P+t[ue+tt+t[de+V+t[pe+O]]];xe*=xe,p=xe*xe*(e[X]*Ai+i[X]*_i+s[X]*zi+n[X]*Si)}let ge=.6-Fi*Fi-Bi*Bi-Ti*Ti-Ci*Ci;if(ge<0)x=0;else{const X=ce+1+t[ue+1+t[de+1+t[pe+1]]];ge*=ge,x=ge*ge*(e[X]*Fi+i[X]*Bi+s[X]*Ti+n[X]*Ci)}return 27*(c+u+d+p+x)}}function gi(m){const e=new Uint8Array(512);for(let i=0;i<512/2;i++)e[i]=i;for(let i=0;i<512/2-1;i++){const s=i+~~(m()*(256-i)),n=e[i];e[i]=e[s],e[s]=n}for(let i=256;i<512;i++)e[i]=e[i-256];return e}var Vs=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Us(m){return m&&m.__esModule&&Object.prototype.hasOwnProperty.call(m,"default")?m.default:m}var as={exports:{}};(function(m,t){(function(e,i){m.exports=i()})(Vs,function(){return e.importState=function(s){var n=new e;return n.importState(s),n},e;function e(){return function(s){var n=0,r=0,o=0,a=1;s.length==0&&(s=[+new Date]);var h=i();n=h(" "),r=h(" "),o=h(" ");for(var l=0;l<s.length;l++)n-=h(s[l]),n<0&&(n+=1),r-=h(s[l]),r<0&&(r+=1),o-=h(s[l]),o<0&&(o+=1);h=null;var c=function(){var u=2091639*n+a*23283064365386963e-26;return n=r,r=o,o=u-(a=u|0)};return c.next=c,c.uint32=function(){return c()*4294967296},c.fract53=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.version="Alea 0.9",c.args=s,c.exportState=function(){return[n,r,o,a]},c.importState=function(u){n=+u[0]||0,r=+u[1]||0,o=+u[2]||0,a=+u[3]||0},c}(Array.prototype.slice.call(arguments))}function i(){var s=4022871197,n=function(r){r=r.toString();for(var o=0;o<r.length;o++){s+=r.charCodeAt(o);var a=.02519603282416938*s;s=a>>>0,a-=s,a*=s,s=a>>>0,a-=s,s+=a*4294967296}return(s>>>0)*23283064365386963e-26};return n.version="Mash 0.9",n}})})(as);var Hs=as.exports,Gs=Us(Hs);function hs(m,t,e){return(t-m)*e+m}class bt{noise2D;noise3D;noise4D;seed;_min=-1;_max=1;_scale=1;_power=1;shift={x:0,y:0};octaves=0;_gain=.5;_lacunarity=2;amps=[];_erosion=0;_sharpness=0;_steps=0;_warp=0;_warpNoise;_warp2=0;_warpNoise2;tileX=!1;tileY=!1;position={x:0,y:0};pngr;layers=[];constructor(t={}){this.seed=t.seed??Math.random(),this.pngr=Gs(this.seed),this.min=t.min??-1,this.max=t.max??1,this.scale=t.scale??1,this.power=t.power??1,this.octaves=t.octaves??t.layers?.length??0,this.gain=t.gain??.5,this.lacunarity=t.lacunarity??2,this.sharpness=t.sharpness??0,this.steps=t.steps??0,this.warp=t.warp??0,this.warpNoise=t.warpNoise,this.warp2=t.warp2??0,this.warpNoise2=t.warpNoise2,this.amps=t.amps??[],this.tileX=t.tileX??t.tile??!1,this.tileY=t.tileY??t.tile??!1,this.createLayers(t)}createLayers(t){for(let e=0;e<this.octaves;e++){const i=t.layers?.[e]??{};if(i instanceof bt){this.layers[e]=i;continue}i.seed===void 0&&(i.seed=this.pngr()),this.layers[e]=new bt(i)}this.layers.length==0&&(this.noise2D=qs(this.pngr),this.noise3D=Ls(this.pngr),this.noise4D=Ws(this.pngr))}warpPosition(t,e){if(t==null||t==0)return;e!=null&&(e.position=this.position);let i=this.position.x,s=this.position.y,n=this.position.z,r=this.position.w;const o=e??this,a=this.scale;this.position.x=i+54.47*a,this.position.y=s-34.98*a,n!=null&&(this.position.z=n+21.63*a),r!=null&&(this.position.w=r-67.1*a),i+=o.getFBM()*t,s+=o.getFBM()*t,n!=null&&(n+=o.getFBM()*t),r!=null&&(r+=o.getFBM()*t),this.position.x=i,this.position.y=s,this.position.z=n,this.position.w=r}tilePosition(){if(!this.tileX&&!this.tileY)return;const t=this.position.x,e=this.position.y;let i=0,s=0,n=0,r=0;this.tileX&&(i=Math.sin(t*Math.PI*2),s=Math.cos(t*Math.PI*2)),this.tileY&&(n=Math.sin(e*Math.PI*2),r=Math.cos(e*Math.PI*2)),this.tileX&&!this.tileY?(this.position.x=i,this.position.y=s+e):this.tileY&&!this.tileX?(this.position.x=n+t,this.position.y=r):this.tileX&&this.tileY&&(this.position.x=i,this.position.y=s,this.position.z=n,this.position.w=r)}getFBM(){const t=this.position.x,e=this.position.y,i=this.position.z,s=this.position.w,n=this.scale;if(this.layers.length==0)return i!=null&&s!=null&&this.noise4D!=null?this.noise4D(t*n,e*n,i*n,s*n):i!=null&&this.noise3D!=null?this.noise3D(t*n,e*n,i*n):this.noise2D!=null?this.noise2D(t*n,e*n):0;let r=1,o=1,a=n;const h=this.lacunarity,l=this.gain;let c=0;for(let u=0;u<this.octaves;u++){const d=this.layers[u],p=this.amps[u]??1,x=d.get(t*a,e*a,i!=null?i*a:void 0,s!=null?s*a:void 0)*o*p;c+=x,o*=l,a*=h,r+=o*p}return c/r}applyShift(){const t=this.shift;t!==void 0&&(this.position.x+=t.x,this.position.y+=t.y,this.position.z&&(this.position.z+=t.z??0),this.position.w&&(this.position.w+=t.w??0))}applyPower(t){const e=this.power;return e!=1&&(t=(Math.pow((t+1)*.5,e)-.5)*2),t}applySharpness(t){const e=this.sharpness;if(e!=0){const i=(Math.abs(t)-.5)*2,s=(.5-Math.abs(t))*2;t=hs(t,i,Math.max(0,e)),t=hs(t,s,Math.max(0,-e))}return t}applySteps(t){const e=this.steps;return e!=0&&(t=(t+1)*.5,t=Math.floor(t*e)/e,t=t*2-1),t}getNoise(t,e,i=void 0,s=void 0){this.position.x=t,this.position.y=e,this.position.z=i,this.position.w=s,this.applyShift(),this.tilePosition(),this.warpPosition(this.warp,this.warpNoise),this.warpPosition(this.warp2,this.warpNoise2);let n=this.getFBM();return n=this.applyPower(n),n=this.applySharpness(n),n=this.applySteps(n),n}get(t,e=void 0,i=void 0,s=void 0){const n=this.normalized(t,e,i,s);return this.normalizedToMinMax(n)}normalized(t,e=void 0,i=void 0,s=void 0){return Array.isArray(t)?(s=t[3],i=t[2],e=t[1],t=t[0]):typeof t=="object"&&(s=t.w,i=t.z,e=t.y,t=t.x),e=e??0,this.getNoise(t,e,i,s)}minMaxToNormalized(t){return(t-this.min)/(this.max-this.min)*2-1}normalizedToMinMax(t){return(t+1)*.5*(this.max-this.min)+this.min}move(t,e,i=void 0,s=void 0){if(!this.shift){this.shift={x:t,y:e,z:i,w:s};return}this.shift.x+=t,this.shift.y+=e,i!=null&&(this.shift.z=(this.shift.z??0)+i),s!=null&&(this.shift.w=(this.shift.w??0)+s)}checkParameterInput(t){return typeof t=="object"&&!(t instanceof bt)&&(t.seed===void 0&&(t.seed=this.pngr()),t=new bt(t)),t}getParameter(t){return typeof t=="number"?t:t.get(this.position)}get min(){return this.getParameter(this._min)}set min(t){this._min=this.checkParameterInput(t)}get max(){return this.getParameter(this._max)}set max(t){this._max=this.checkParameterInput(t)}get scale(){return this.getParameter(this._scale)}set scale(t){this._scale=this.checkParameterInput(t)}get power(){return this.getParameter(this._power)}set power(t){this._power=this.checkParameterInput(t)}get gain(){return this.getParameter(this._gain)}set gain(t){this._gain=this.checkParameterInput(t)}get lacunarity(){return this.getParameter(this._lacunarity)}set lacunarity(t){this._lacunarity=this.checkParameterInput(t)}get erosion(){return this.getParameter(this._erosion)}set erosion(t){this._erosion=this.checkParameterInput(t)}get sharpness(){return this.getParameter(this._sharpness)}set sharpness(t){this._sharpness=this.checkParameterInput(t)}get steps(){return Math.round(this.getParameter(this._steps))}set steps(t){this._steps=this.checkParameterInput(t)}get warp(){return this.getParameter(this._warp)}set warp(t){this._warp=this.checkParameterInput(t)}get warpNoise(){return this._warpNoise}set warpNoise(t){if(t==null){this._warpNoise=void 0;return}const e=this.checkParameterInput(t);e instanceof bt&&(this._warpNoise=e)}get warp2(){return this.getParameter(this._warp2)}set warp2(t){this._warp2=this.checkParameterInput(t)}get warpNoise2(){return this._warpNoise2}set warpNoise2(t){if(t==null){this._warpNoise2=void 0;return}const e=this.checkParameterInput(t);e instanceof bt&&(this._warpNoise2=e)}}const Xe=new nt(16711884);class It{constructor(t={}){this.hsl=!1,this.isColorGradient=!0,this.defaultMod=void 0,this.stops=[],t instanceof Array&&(t={stops:t}),this.hsl=t.hsl??!1,this.defaultMod=t.mod,t.between&&this.addBetween(t.between,t.min,t.max),t.stops&&this.addStops(t.stops)}addStops(t){for(const e of t)this.addStop(e)}addBetween(t,e=-1,i=1){t.length<2&&console.warn("ColorGradient: addBetween requires at least 2 stops");const s=(i-e)/(t.length-1);for(let n=0;n<t.length;n++)this.addStop([n*s+e,t[n]])}addStop(t){let e,i,s;t instanceof Array?(e=t[0],i=t[1],t.length>2&&(s=t[2])):(e=t.position,i=t.value,s=t.mod),typeof i=="number"?i=new nt(i):!(i instanceof nt)&&!(i instanceof It)&&(i=new It(i));let n=0;for(;n<this.stops.length&&e>this.stops[n].position;)n++;this.stops.splice(n,0,{position:e,value:i,mod:s})}colorAtIndex(t,e=void 0,i=void 0,s=void 0){if(t<0||t>=this.stops.length)return;let n=this.stops[t].value;return n instanceof It?n=n.get(e,i,s):n=n.clone(),n}dimensions(){let t=0;for(const e of this.stops)e.value instanceof It&&(t=Math.max(e.value.dimensions(),t));return t+1}mix(t,e,i,s=void 0,n=void 0,r=void 0){if(t<0||t>=this.stops.length||e<0||e>=this.stops.length)return;i=Math.min(Math.max(0,i),1);const o=this.colorAtIndex(t,s,n,r);if(!o)return;if(t==e)return o;const a=this.stops[e];a.mod&&(i=a.mod(i)),this.defaultMod&&(i=this.defaultMod(i));const h=this.colorAtIndex(e,s,n,r);return h&&(this.hsl?o.lerpHSL(h,i):o.lerp(h,i)),o}get(t=0,e=void 0,i=void 0,s=void 0){if(this.stops.length<1)return Xe;if(t<=this.stops[0].position||this.stops.length==1)return this.mix(0,0,0,e,i,s)??Xe;for(let n=0;n<this.stops.length-1;n++){const r=this.stops[n].position,o=this.stops[n+1].position;if(r<=t&&t<=o){const a=(t-r)/(o-r);return this.mix(n,n+1,a,e,i,s)??Xe}}return this.mix(this.stops.length-1,this.stops.length-1,0,e,i,s)??Xe}static between(t,e,i){return new It({between:t,min:e,max:i})}}const Xs={beach:{noise:{min:-.05,max:.05,octaves:4,lacunarity:2,gain:{min:.1,max:.8,scale:2},warp:.3,scale:1,power:1.5},colors:[[-.5,10044416],[-0,13412864],[.4,13399808],[1,8738]],seaColors:[[-1,102],[-.55,170],[-.1,62181]],seaNoise:{min:-.008,max:.008,scale:6},vegetation:{items:[{name:"Rock",density:100,minimumHeight:.1,colors:{Gray:{array:[7820612]}}},{name:"PalmTree",density:150,minimumHeight:.1,colors:{Brown:{array:[9127187,5976325]},Green:{array:[2262302,2270494]},DarkGreen:{array:[25600]}},ground:{color:2267392,radius:.1,raise:.01}}]}},forest:{noise:{min:-.05,max:.05,octaves:4,lacunarity:2,gain:{min:.1,max:.8,scale:2},warp:.3,scale:1,power:.8},tintColor:1127202,colors:[[-.5,3351040],[-0,1135890],[.4,2245649],[1,26146]],seaColors:[[-1,102],[-.52,170],[-.1,17061]],seaNoise:{min:-.005,max:.005,scale:5},vegetation:{items:[{name:"Rock",density:20,minimumHeight:.1,colors:{Gray:{array:[8947848,6381921,4276545]}}},{name:"CommonTree",density:25,minimumHeight:0},{name:"Bush",density:25,minimumHeight:0},{name:"CommonTree_Dead",density:15},{name:"PineTree",density:25},{name:"TreeStump",density:5},{name:"TreeStump_Moss",density:5},{name:"Willow",density:20},{name:"Willow_Dead",density:15},{name:"WoodLog",density:5},{name:"BirchTree",density:20},{name:"BirchTree_Dead",density:15}]}},snowForest:{noise:{min:-.05,max:.05,octaves:4,lacunarity:2,gain:{min:.1,max:.8,scale:2},warp:.3,scale:1,power:.8},tintColor:1153314,colors:[[-.5,16751103],[-0,16777215],[.4,15663103],[1,16777215]],seaColors:[[-1,8952268],[-.52,11193599],[-.1,11193599]],seaNoise:{min:-0,max:.001,scale:5},vegetation:{items:[{name:"Rock_Snow",density:20,minimumHeight:.1,colors:{Gray:{array:[8947848,6381921,4276545]}}},{name:"CommonTree_Snow",density:25,minimumHeight:0},{name:"Bush_Snow",density:25,minimumHeight:0},{name:"CommonTree_Dead_Snow",density:15},{name:"PineTree_Snow",density:25},{name:"TreeStump_Snow",density:5},{name:"TreeStump_Snow",density:5},{name:"Willow_Snow",density:20},{name:"Willow_Dead_Snow",density:15},{name:"WoodLog_Snow",density:5},{name:"BirchTree_Snow",density:20},{name:"BirchTree_Dead_Snow",density:15}]}}};class bi{constructor(t={}){if(this.subdivisions=void 0,t??={},this.points=[],t.bounds)this.boundary=t.bounds.clone();else if(t.size){const e=t.size;this.boundary=new ft(new f(-e,-e,-e),new f(e,e,e))}else if(t.min||t.max){const e=t.min||new f(-1,-1,-1),i=t.max||new f(1,1,1);this.boundary=new ft(e,i)}else if(t.points&&t.points.length>0){const e=t.points[0].clone(),i=t.points[0].clone();for(const s of t.points)e.x=Math.min(e.x,s.x),e.y=Math.min(e.y,s.y),e.z=Math.min(e.z,s.z),i.x=Math.max(i.x,s.x),i.y=Math.max(i.y,s.y),i.z=Math.max(i.z,s.z);this.boundary=new ft(e,i)}else this.boundary=new ft(new f(-1,-1,-1),new f(1,1,1));if(this.capacity=t.capacity||4,t.points)for(const e of t.points)this.insertXYZ(e.x,e.y,e.z)}subdivide(){if(this.subdivisions!=null)return;const t=new f,e=[];for(let i=0;i<2;i++)for(let s=0;s<2;s++)for(let n=0;n<2;n++){const r=this.boundary.min.clone(),o=this.boundary.max.clone();this.boundary.getSize(t),t.divideScalar(2),r.x+=i*t.x,r.y+=s*t.y,r.z+=n*t.z,o.x-=(1-i)*t.x,o.y-=(1-s)*t.y,o.z-=(1-n)*t.z,e.push(new bi({min:r,max:o,capacity:this.capacity}))}this.subdivisions=e}query(t,e=1){return this.queryBoxXYZ(t.x,t.y,t.z,e).filter(s=>s.distanceTo(t)<e)}queryXYZ(t,e,i,s){const n=new f(t,e,i);return this.query(n,s)}queryBoxXYZ(t,e,i,s){const n=new f(t-s,e-s,i-s),r=new f(t+s,e+s,i+s),o=new ft(n,r);return this.queryBox(o)}queryBox(t,e=[]){if(e??=[],!t.intersectsBox(this.boundary))return e;for(const i of this.points)t.containsPoint(i)&&e.push(i);if(this.subdivisions)for(const i of this.subdivisions)i.queryBox(t,e);return e}minDist(t,e){return this.query(t,e).length<1}insert(t,e=void 0){return this.insertPoint(t,e)}insertXYZ(t,e,i,s=void 0){return this.insertPoint(new f(t,e,i),s)}insertPoint(t,e=void 0){if(t=t.clone(),e&&(t.data=e),!this.boundary.containsPoint(t))return!1;if(this.points.length<this.capacity)return this.points.push(t),!0;{this.subdivide();let i=!1;for(const s of this.subdivisions??[])s.insertPoint(t,e)&&(i=!0);return i}}showBoxes(t,e=void 0){const i=new f;this.boundary.getSize(i);const s=new mi(i.x*2,i.y*2,i.z*2),n=new Es(s,t||new ss({wireframe:!0}));if(this.boundary.getCenter(n.position),e??=new pt,e.add(n),this.subdivisions)for(const r of this.subdivisions)r.showBoxes(t,e);return e}show(t={}){t??={};const e=t.pointsOnly;let i=t.mat;const s=this.all(),n=new Rt,r=new Float32Array(s.length*3),o=new Float32Array(s.length*3);let a;if(t.p&&t.min){for(const c of s)c.close=!1;a=this.query(t.p,t.min);for(const c of a)c.close=!0}for(let c=0;c<s.length;c++)r[c*3]=s[c].x,r[c*3+1]=s[c].y,r[c*3+2]=s[c].z,o[c*3]=s[c].close?1:.7,o[c*3+1]=s[c].close?0:.7,o[c*3+2]=s[c].close?0:.7;n.setAttribute("position",new xt(r,3)),n.setAttribute("color",new xt(o,3));const h=new Is(n,new ts({size:t.size||1,sizeAttenuation:t.sizeAttenuation||!1,vertexColors:!0}));if(e)return h;i=i||new ss({transparent:!0,opacity:.01,depthTest:!1});const l=this.showBoxes(i);return l.add(h),l}all(t=[]){t??=[];for(const e of this.points)t.push(e);if(this.subdivisions)for(const e of this.subdivisions)e.all(t);return t}}class Ys{constructor(t={}){if(this.vegetationPositions=new bi,t.preset){const e=Xs[t.preset];e&&(t={...e,...t})}this.options=t,t.noise&&(this.noise=new bt(t.noise)),t.colors&&(this.colors=new It(t.colors)),t.seaNoise&&(this.seaNoise=new bt(t.seaNoise)),t.seaColors&&(this.seaColors=new It(t.seaColors))}get min(){return this.noise?.min??-1}get max(){return this.noise?.max??1}getHeight(t){return this.noise?this.noise.get(t):0}getColor(t,e=void 0,i=0){if(this.noise&&e===void 0&&(e=this.noise.normalized(t)),this.colors){const s=this.colors.get(e);return this.options.tintColor?s.lerp(new nt(this.options.tintColor),i/Math.PI):s}}getSeaHeight(t){return this.seaNoise?this.seaNoise.get(t):0}getSeaColor(t,e){if(e??=this.noise?.normalized(t)??0,this.seaColors)return this.seaColors.get(e)}addVegetation(t,e,i,s){this.vegetationPositions.insert(e,t)}closestVegetationDistance(t,e){const i=this.vegetationPositions.queryBoxXYZ(t.x,t.y,t.z,e);if(i.length===0)return;let s=1/0;for(const n of i){const r=t.distanceTo(n);r<s&&(s=r)}return s<e?s:void 0}itemsAround(t,e){return this.vegetationPositions.queryBoxXYZ(t.x,t.y,t.z,e)}maxVegetationRadius(){let t=0;for(const e of this.options.vegetation?.items??[])e.ground?.radius&&(t=Math.max(t,e.ground.radius));return t}vegetationHeightAndColorForFace(t,e,i,s,n){const r=this.maxVegetationRadius(),o=this.itemsAround(t,r+n*2);let a=0,h=0,l=0,c=[t,e,i];for(let u=0;u<3;u++){let d=c[u];for(const p of o){if(!p.data?.ground?.radius)continue;let x=d.distanceTo(p);if(x<p.data.ground?.radius){let y=Math.max(0,1-x/p.data.ground.radius);y=Math.pow(y,.5);let g=p.data.ground?.raise??0;if(g*=y,u===0&&(a+=g),u===1&&(h+=g),u===2&&(l+=g),!p.data.ground.color)continue;let M=new nt(p.data.ground.color);s.lerp(M,y/3)}}}return{heightA:a,heightB:h,heightC:l,color:s}}}onmessage=function(m){const{type:t,data:e,requestId:i}=m.data;if(console.log("Worker received message:",t,"requestId:",i),t==="createGeometry"){console.log("Creating geometry with options:",e);try{const[s,n,r]=js(e);console.log("Geometry created, sending back to main thread");const o=s.getAttribute("position").array.buffer,a=s.getAttribute("color").array.buffer,h=s.getAttribute("normal").array.buffer,l=n.getAttribute("position").array.buffer,c=n.getAttribute("color").array.buffer,u=n.getAttribute("normal").array.buffer,d=n.morphAttributes.position[0].array.buffer,p=n.morphAttributes.normal[0].array.buffer;try{postMessage({type:"geometry",data:{positions:o,colors:a,normals:h,oceanPositions:l,oceanColors:c,oceanNormals:u,vegetation:r,oceanMorphPositions:d,oceanMorphNormals:p},requestId:i},[o,a,h,l,c,u,d,p])}catch(x){console.error("Error transferring buffers:",x),postMessage({type:"geometry",data:{positions:Array.from(new Float32Array(o)),colors:Array.from(new Float32Array(a)),normals:Array.from(new Float32Array(h)),oceanPositions:Array.from(new Float32Array(l)),oceanColors:Array.from(new Float32Array(c)),oceanNormals:Array.from(new Float32Array(u)),vegetation:r,oceanMorphPositions:Array.from(new Float32Array(d)),oceanMorphNormals:Array.from(new Float32Array(p))},requestId:i})}}catch(s){console.error("Error in worker while creating geometry:",s),postMessage({type:"error",error:s instanceof Error?s.message:String(s),requestId:i})}}else console.error("Unknown message type",t)};function js(m){const t=m.detail??50,e=m.shape=="plane"?new We(3,3,t,t).toNonIndexed():new He(1,t),i=m.shape=="plane"?new We(3,3,t,t).toNonIndexed():new He(1,t),s=new Ys(m.biome),n=e.getAttribute("position"),r=i.getAttribute("position"),o=n.count/3,a=Math.PI*4/o;console.log("faces:",o);const h=new Map,l=new Array(o),c=new Float32Array(n.count*3),u=new Float32Array(r.count*3),d=e.getAttribute("normal"),p=i.getAttribute("normal"),x=new f(0,1,0),y=new f,g=new f,M=new f,w=new f,b={};y.fromBufferAttribute(n,0),g.fromBufferAttribute(n,1);const S=y.distanceTo(g),F=(m.scatter??1.2)*S,_=100,E=new bt({min:-F/2,max:F/2,scale:_,seed:0});i.morphAttributes.position=[],i.morphAttributes.normal=[];const R=[],z=[],B=new f,k=new f,v=new f,N=new f,I=new f,U=new f,D=new f;for(let A=0;A<n.count;A+=3){if(y.fromBufferAttribute(n,A),g.fromBufferAttribute(n,A+1),M.fromBufferAttribute(n,A+2),B.fromBufferAttribute(r,A),k.fromBufferAttribute(r,A+1),v.fromBufferAttribute(r,A+2),m.shape=="plane"){let C=y.y;y.y=y.z,y.z=C,C=g.y,g.y=g.z,g.z=C,C=M.y,M.y=M.z,M.z=C,C=B.y,B.y=B.z,B.z=C,C=k.y,k.y=k.z,k.z=C,C=v.y,v.y=v.z,v.z=C}if(w.copy(y).add(g).add(M).divideScalar(3),w.normalize(),s.options.vegetation?.items)for(const C of s.options.vegetation.items){if(C.density===void 0||C.density<=0)continue;let P=C.density*a*5;if(C.name.includes("Rock")&&(P*=.1),Math.random()>P)continue;const tt=s.getHeight(w),V=Math.min(-tt/s.min,0)+Math.max(tt/s.max,0),O=new f().crossVectors(g.clone().sub(y),M.clone().sub(y)).normalize(),G=Math.acos(Math.abs(O.dot(m.shape=="plane"?x:w)));if(!(C.minimumHeight!==void 0&&V<C.minimumHeight)&&!(C.maximumHeight!==void 0&&V>C.maximumHeight)&&!(C.minimumSlope!==void 0&&G<C.minimumSlope)&&!(C.maximumSlope!==void 0&&G>C.maximumSlope)){if(C.minimumDistance!==void 0||C.maximumDistance!==void 0){const Mt=s.closestVegetationDistance(w,C.maximumDistance??1);if(C.minimumDistance!==void 0&&(!Mt||Mt<C.minimumDistance)||C.maximumDistance!==void 0&&Mt&&Mt>C.maximumDistance)continue}s.addVegetation(C,w.clone(),V,G),b[C.name]||(b[C.name]=[]),b[C.name].push(w.clone())}}let T=0;for(let C=0;C<3;C++){let P=y;C===1&&(P=g),C===2&&(P=M);const tt=`${P.x.toFixed(5)},${P.y.toFixed(5)},${P.z.toFixed(5)}`;let V=h.get(tt);if(!V){const G=s.getHeight(P),Mt=E.get(P),oe=E.get(P.y+_*100,P.z-_*100,P.x+_*100),ae=E.get(P.z-_*200,P.x+_*200,P.y-_*200),he=s.getSeaHeight(P),le=s.getSeaHeight(P.addScalar(100));P.subScalar(100),V={height:G,scatter:new f(Mt,oe,ae),seaHeight:he,seaMorph:le},h.set(tt,V)}l[A+C]=V,T+=V.height,P.add(V.scatter),m.shape=="plane"?P.y=V.height:P.normalize().multiplyScalar(V.height+1),n.setXYZ(A+C,P.x,P.y,P.z);let O=B;C===1&&(O=k),C===2&&(O=v),O.add(V.scatter),m.shape=="plane"?O.y=V.seaMorph:O.normalize().multiplyScalar(V.seaMorph+1),R.push(O.x,O.y,O.z),C===0?(N.copy(O),O=N):C===1?(I.copy(O),O=I):C===2&&(U.copy(O),O=U),m.shape=="plane"?O.y=V.seaHeight:O.normalize().multiplyScalar(V.seaHeight+1),r.setXYZ(A+C,O.x,O.y,O.z)}T/=3,T=Math.min(-T/s.min,0)+Math.max(T/s.max,0),D.crossVectors(g.clone().sub(y),M.clone().sub(y)).normalize(),d.setXYZ(A,D.x,D.y,D.z),d.setXYZ(A+1,D.x,D.y,D.z),d.setXYZ(A+2,D.x,D.y,D.z);const W=Math.acos(Math.abs(D.dot(m.shape=="plane"?x:w))),q=s.getColor(w,T,W);q&&(c[A*3]=q.r,c[A*3+1]=q.g,c[A*3+2]=q.b,c[A*3+3]=q.r,c[A*3+4]=q.g,c[A*3+5]=q.b,c[A*3+6]=q.r,c[A*3+7]=q.g,c[A*3+8]=q.b);const H=s.getSeaColor(w,T);H&&(u[A*3]=H.r,u[A*3+1]=H.g,u[A*3+2]=H.b,u[A*3+3]=H.r,u[A*3+4]=H.g,u[A*3+5]=H.b,u[A*3+6]=H.r,u[A*3+7]=H.g,u[A*3+8]=H.b),D.crossVectors(k.clone().sub(B),v.clone().sub(B)).normalize(),p.setXYZ(A,D.x,D.y,D.z),p.setXYZ(A+1,D.x,D.y,D.z),p.setXYZ(A+2,D.x,D.y,D.z),D.crossVectors(I.clone().sub(N),U.clone().sub(N)).normalize(),z.push(D.x,D.y,D.z),z.push(D.x,D.y,D.z),z.push(D.x,D.y,D.z)}const $=new nt;for(let A=0;A<n.count;A+=3){y.fromBufferAttribute(n,A),g.fromBufferAttribute(n,A+1),M.fromBufferAttribute(n,A+2),m.shape=="plane"?(y.y=0,g.y=0,M.y=0):(y.normalize(),g.normalize(),M.normalize()),$.setRGB(c[A*3],c[A*3+1],c[A*3+2]);const T=s.vegetationHeightAndColorForFace(y,g,M,$,S),W=l[A],q=l[A+1],H=l[A+2];m.shape=="plane"?(y.y=W.height+T.heightA,g.y=q.height+T.heightB,M.y=H.height+T.heightC):(y.normalize().multiplyScalar(W.height+T.heightA+1),g.normalize().multiplyScalar(q.height+T.heightB+1),M.normalize().multiplyScalar(H.height+T.heightC+1)),n.setXYZ(A,y.x,y.y,y.z),n.setXYZ(A+1,g.x,g.y,g.z),n.setXYZ(A+2,M.x,M.y,M.z),c[A*3]=T.color.r,c[A*3+1]=T.color.g,c[A*3+2]=T.color.b,c[A*3+3]=T.color.r,c[A*3+4]=T.color.g,c[A*3+5]=T.color.b,c[A*3+6]=T.color.r,c[A*3+7]=T.color.g,c[A*3+8]=T.color.b}i.morphAttributes.position[0]=new at(R,3),i.morphAttributes.normal[0]=new at(z,3),e.setAttribute("color",new xt(c,3)),i.setAttribute("color",new xt(u,3)),console.log("Vegetation positions generated:",Object.keys(b).map(A=>`${A}: ${b[A].length} positions`));const L=Object.values(b).reduce((A,T)=>A+T.length,0);if(L===0){console.log("No vegetation positions generated, adding manual positions");const A=["PineTree","CommonTree","Rock","Willow","PalmTree"];for(const T of A)b[T]=[],b[T].push(new f(0,1,0)),b[T].push(new f(1,0,0)),b[T].push(new f(0,0,1)),b[T].push(new f(-1,0,0)),b[T].push(new f(0,0,-1)),b[T].push(new f(.7,.7,0)),b[T].push(new f(-.7,.7,0)),b[T].push(new f(0,-1,0));console.log("Added manual vegetation positions:",Object.keys(b).map(T=>`${T}: ${b[T].length} positions`))}if(L<100){console.log("Too few vegetation positions generated, adding more");const A=["PineTree","CommonTree","Willow","PalmTree","BirchTree"],T=Object.keys(b).filter(W=>!W.includes("Rock"));for(const W of A)if(T.includes(W))for(let q=0;q<40;q++){const H=Math.random()*2-1,C=Math.random()*2-1,P=Math.random()*2-1,tt=new f(H,C,P).normalize();b[W].push(tt)}console.log("Added additional vegetation positions:",Object.keys(b).map(W=>`${W}: ${b[W].length} positions`))}return[e,i,b]}})();
//# sourceMappingURL=worker-B3NlEH-v.js.map
